@page "/items"
@using System.Text.Json;

@inject IItem searchItem

<h3>SearchItemComponent</h3>
<br />

<SearchBarComponent OnSearch="SeeachBarHandler"></SearchBarComponent>

<br />

@if (items != null)
{
    @foreach (var item in items)
    {
        @*<ItemComponent Item="item"></ItemComponent>*@
        <div class="col-md-4">
            <div class="col-md-12 stuff">
                <div  style="width:100%; border-radius:2px; background-color:white;">
                    <button type="button" class="btn" style="border:2px #cff7f9 inset; width:100%">@item.Name</button>
                    <img src="@item.ImageLink" style="width:100%;height:150px;border-radius:1px;">
                    <div>
                        Price: &nbsp;@item.Price &nbsp;&nbsp;
                    </div>

                    @if(@item.CartFlag)
                    {
                        <button type="button" class="btn add-to-cart" style="background-color:#ffd800;" @onclick="(()=>AddToCart_Click(item))">Remove Item</button>
                    }
                    else
                    {
                        <button type="button" class="btn add-to-cart" @onclick="(()=>AddToCart_Click(item))">Add To Card</button>
                    }
                </div>
            </div>
        </div>
    }
}

@*<table class="table table-striped">
    <thead>
        <tr>
            <th>Name</th>
            <th>Brand</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        
    </tbody>
</table>*@

@code {
    private IEnumerable<Item> items;
    public bool CartFlag = false;
    private readonly IHttpContextAccessor _httpContextAccessor;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        items = searchItem.GetIAlltems(null);

    }
    private void SeeachBarHandler(string filter)
    {
        items = searchItem.GetIAlltems(filter);
    }

    private async Task AddToCart_Click(Item cartClicked)
    {
        CartFlag = true;

        //ISession session = _httpContextAccessor.HttpContext.Session;

        //string cartJson = session.GetString("myCart");

        //if (!string.IsNullOrEmpty(cartJson))
        //{
        //    JsonSerializer.Deserialize<List<Item>>(cartJson);
        //}



        //var result = await sessionStorage.GetAsync<List<Cart>>("myCart");
    }
}
